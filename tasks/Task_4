from math import sqrt

def hex_to_rgb(hex_code):
    if not isinstance(hex_code, str) or not (len(hex_code) == 7 or len(hex_code) == 4):
        raise ValueError("Неправильный формат HEX-кода цвета.")
    hex_code = hex_code.lstrip('#')
    if len(hex_code) == 3:
        hex_code = ''.join(c * 2 for c in hex_code)
    try:
        r, g, b = (int(hex_code[i:i+2], 16) for i in (0, 2, 4))
        return r, g, b
    except ValueError:
        raise ValueError("Неправильный формат HEX-кода цвета.")

def rgb_to_hex(rgb_tuple):
    r, g, b = rgb_tuple
    return f"#{r:02x}{g:02x}{b:02x}"

def color_averager(*hex_colors):
    if len(hex_colors) < 2:
        raise ValueError("Нужно передать хотя бы два HEX-кода цвета.")

    rgb_colors = [hex_to_rgb(hex_color) for hex_color in hex_colors]
    r_values = [rgb[0] for rgb in rgb_colors]
    g_values = [rgb[1] for rgb in rgb_colors]
    b_values = [rgb[2] for rgb in rgb_colors]

    avg_r = int(sqrt(sum(r**2 for r in r_values) / len(r_values)))
    avg_g = int(sqrt(sum(g**2 for g in g_values) / len(g_values)))
    avg_b = int(sqrt(sum(b**2 for b in b_values) / len(b_values)))

    return rgb_to_hex((avg_r, avg_g, avg_b))
